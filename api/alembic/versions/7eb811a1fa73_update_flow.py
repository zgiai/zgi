"""update flow

Revision ID: 7eb811a1fa73
Revises: 4d2dceba3ed9
Create Date: 2025-01-30 14:38:36.108756

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '7eb811a1fa73'
down_revision: Union[str, None] = '4d2dceba3ed9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('flow',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('logo', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('flow_type', sa.Integer(), nullable=True),
    sa.Column('is_delete', sa.Integer(), nullable=False),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.Column('guide_word', sa.String(length=1000), nullable=True),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_flow_user_id'), 'flow', ['user_id'], unique=False)
    op.create_table('flowversion',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('flow_id', sa.String(length=32), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('flow_type', sa.Integer(), nullable=True),
    sa.Column('is_current', sa.Integer(), nullable=True),
    sa.Column('is_delete', sa.Integer(), nullable=True),
    sa.Column('original_version_id', sa.Integer(), nullable=True),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['flow_id'], ['flow.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_flowversion_flow_id'), 'flowversion', ['flow_id'], unique=False)
    op.create_index(op.f('ix_flowversion_user_id'), 'flowversion', ['user_id'], unique=False)
    op.add_column('llm_config', sa.Column('config', sa.JSON(), nullable=False))
    op.alter_column('llm_config', 'config_key',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               nullable=True)
    op.drop_index('ix_llm_config_config_key', table_name='llm_config')
    op.create_index(op.f('ix_llm_config_config_key'), 'llm_config', ['config_key'], unique=False)
    op.drop_constraint('llm_config_ibfk_1', 'llm_config', type_='foreignkey')
    op.drop_column('llm_config', 'llm_model_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('llm_config', sa.Column('llm_model_id', mysql.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('llm_config_ibfk_1', 'llm_config', 'llm_model', ['llm_model_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_llm_config_config_key'), table_name='llm_config')
    op.create_index('ix_llm_config_config_key', 'llm_config', ['config_key'], unique=False)
    op.alter_column('llm_config', 'config_key',
               existing_type=mysql.VARCHAR(collation='utf8mb4_general_ci', length=255),
               nullable=False)
    op.drop_column('llm_config', 'config')
    op.drop_index(op.f('ix_flowversion_user_id'), table_name='flowversion')
    op.drop_index(op.f('ix_flowversion_flow_id'), table_name='flowversion')
    op.drop_table('flowversion')
    op.drop_index(op.f('ix_flow_user_id'), table_name='flow')
    op.drop_table('flow')
    # ### end Alembic commands ###
