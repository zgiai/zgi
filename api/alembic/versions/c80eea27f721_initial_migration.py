"""initial migration

Revision ID: c80eea27f721
Revises: 
Create Date: 2025-01-18 15:20:57.169175

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c80eea27f721'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_key_mappings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('api_key', sa.String(length=255), nullable=False),
    sa.Column('provider_keys', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_api_key_mappings_api_key'), 'api_key_mappings', ['api_key'], unique=True)
    op.create_index(op.f('ix_api_key_mappings_id'), 'api_key_mappings', ['id'], unique=False)
    op.create_table('chat_sessions',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False, comment='Unique record ID'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment="User ID for distinguishing different users' conversations"),
    sa.Column('conversation_id', sa.String(length=100), nullable=False, comment='Unique conversation identifier for multi-turn dialogues'),
    sa.Column('request_id', sa.String(length=100), nullable=True, comment='Unique request identifier for logging and tracing'),
    sa.Column('question', sa.Text(), nullable=True, comment='User input content'),
    sa.Column('answer', sa.Text(), nullable=True, comment='Model generated response'),
    sa.Column('model', sa.String(length=100), nullable=False, comment='Model name and version used, e.g., gpt-4, gpt-3.5-turbo'),
    sa.Column('prompt_tokens', sa.Integer(), nullable=False, comment='Number of tokens consumed by user input'),
    sa.Column('completion_tokens', sa.Integer(), nullable=False, comment='Number of tokens consumed by model response'),
    sa.Column('cost', sa.DECIMAL(precision=11, scale=7), nullable=False, comment='Cost of this conversation in USD'),
    sa.Column('api_key', sa.String(length=200), nullable=True, comment='API Key used for the call (if any)'),
    sa.Column('interaction_type', sa.SmallInteger(), nullable=False, comment='Interaction type: 1-text chat, 2-code generation'),
    sa.Column('app_id', sa.Integer(), nullable=True, comment='Application ID to distinguish different application requests'),
    sa.Column('source', sa.SmallInteger(), nullable=True, comment='Request source: 1-Web, 2-Mobile, 3-API call'),
    sa.Column('ip_address', sa.String(length=45), nullable=False, comment='User request IP address (IPv4/IPv6)'),
    sa.Column('is_violation', sa.SmallInteger(), nullable=True, comment='Content violation flag: 0-no, 1-yes'),
    sa.Column('status', sa.SmallInteger(), nullable=False, comment='Request status: 1-success, 2-failure, 3-other'),
    sa.Column('parameters', sa.JSON(), nullable=True, comment='Chat request parameters (JSON), e.g., temperature, top_p'),
    sa.Column('openai_response_id', sa.String(length=100), nullable=True, comment='OpenAI response ID, e.g., chatcmpl-xxx'),
    sa.Column('openai_system_fingerprint', sa.String(length=100), nullable=True, comment='OpenAI system fingerprint'),
    sa.Column('openai_created_at', sa.Integer(), nullable=True, comment='OpenAI response created timestamp'),
    sa.Column('raw_request', sa.JSON(), nullable=True, comment='Original OpenAI API request parameters (JSON)'),
    sa.Column('raw_response_chunks', sa.JSON(), nullable=True, comment='Original OpenAI API streaming response data (JSON array)'),
    sa.Column('finish_reason', sa.String(length=50), nullable=True, comment='Conversation end reason (stop, length...)'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='Record creation time'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='Record update time'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_sessions_id'), 'chat_sessions', ['id'], unique=False)
    op.create_table('llm_provider',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('provider', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('api_base', sa.String(length=255), nullable=True),
    sa.Column('api_key', sa.String(length=255), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_llm_provider_id'), 'llm_provider', ['id'], unique=False)
    op.create_index(op.f('ix_llm_provider_name'), 'llm_provider', ['name'], unique=True)
    op.create_index(op.f('ix_llm_provider_provider'), 'llm_provider', ['provider'], unique=False)
    op.create_table('model_categories',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('category_name', sa.String(length=255), nullable=False, comment='Category name'),
    sa.Column('parent_id', sa.BigInteger(), nullable=True, comment='Parent category ID or NULL'),
    sa.Column('description', sa.String(length=1000), nullable=True, comment='Optional category description'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Last update timestamp'),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True, comment='Soft delete timestamp'),
    sa.ForeignKeyConstraint(['parent_id'], ['model_categories.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_model_categories_id'), 'model_categories', ['id'], unique=False)
    op.create_table('model_providers',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('provider_name', sa.String(length=100), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=True, comment='1 if enabled, 0 if disabled'),
    sa.Column('api_key', sa.Text(), nullable=True, comment='Encrypted API Key'),
    sa.Column('org_id', sa.String(length=100), nullable=True, comment='Optional organization ID'),
    sa.Column('base_url', sa.String(length=255), nullable=True, comment='Custom base URL for this provider'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Last update timestamp'),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True, comment='Soft delete timestamp (NULL if active)'),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_model_providers_id'), 'model_providers', ['id'], unique=False)
    op.create_table('usage_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('api_key', sa.String(length=255), nullable=False),
    sa.Column('model', sa.String(length=100), nullable=False),
    sa.Column('prompt_tokens', sa.Integer(), nullable=True),
    sa.Column('completion_tokens', sa.Integer(), nullable=True),
    sa.Column('total_tokens', sa.Integer(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_usage_logs_api_key'), 'usage_logs', ['api_key'], unique=False)
    op.create_index(op.f('ix_usage_logs_id'), 'usage_logs', ['id'], unique=False)
    op.create_table('user_quotas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('api_key', sa.String(length=255), nullable=False),
    sa.Column('total_tokens', sa.Integer(), nullable=True),
    sa.Column('used_tokens', sa.Integer(), nullable=True),
    sa.Column('reset_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_user_quotas_api_key'), 'user_quotas', ['api_key'], unique=True)
    op.create_index(op.f('ix_user_quotas_id'), 'user_quotas', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('user_type', sa.Integer(), nullable=False),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('max_tokens', sa.Integer(), nullable=True),
    sa.Column('max_requests_per_day', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_applications_id'), 'applications', ['id'], unique=False)
    op.create_table('chat_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.BigInteger(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('content_type', sa.String(length=100), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_files_id'), 'chat_files', ['id'], unique=False)
    op.create_table('conversations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('session_id', sa.String(length=100), nullable=False, comment='Unique conversation identifier'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_conversations_id'), 'conversations', ['id'], unique=False)
    op.create_table('llm_model',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('model_name', sa.String(length=255), nullable=False),
    sa.Column('model_type', sa.String(length=20), nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['provider_id'], ['llm_provider.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_llm_model_id'), 'llm_model', ['id'], unique=False)
    op.create_index(op.f('ix_llm_model_name'), 'llm_model', ['name'], unique=True)
    op.create_table('model_provider_models',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('provider_id', sa.BigInteger(), nullable=False, comment='Foreign key to model_providers.id'),
    sa.Column('model_name', sa.String(length=255), nullable=False, comment='Model name'),
    sa.Column('model_version', sa.String(length=50), nullable=True, comment='Model version'),
    sa.Column('description', sa.String(length=1000), nullable=True, comment='Brief model description'),
    sa.Column('type', sa.String(length=50), nullable=False, comment='Model type (e.g., LLM, VISION)'),
    sa.Column('modalities', sa.JSON(), nullable=True, comment='Supported modalities (input/output)'),
    sa.Column('max_context_length', sa.Integer(), nullable=True, comment='Maximum context length in tokens'),
    sa.Column('supports_streaming', sa.Boolean(), nullable=True, comment='1 if streaming is supported'),
    sa.Column('supports_function_calling', sa.Boolean(), nullable=True, comment='1 if function calling is supported'),
    sa.Column('supports_roles', sa.Boolean(), nullable=True, comment='1 if multi-role messages supported'),
    sa.Column('supports_functions', sa.Boolean(), nullable=True, comment='1 if tool functions are supported'),
    sa.Column('embedding_dimensions', sa.Integer(), nullable=True, comment='Vector dimensions if embedding model'),
    sa.Column('default_temperature', sa.Float(), nullable=True, comment='Default temperature parameter'),
    sa.Column('default_top_p', sa.Float(), nullable=True, comment='Default top_p parameter'),
    sa.Column('default_max_tokens', sa.Integer(), nullable=True, comment='Default max_tokens setting'),
    sa.Column('price_per_1k_tokens', sa.Float(), nullable=True, comment='Price per 1000 tokens (if unified)'),
    sa.Column('input_cost_per_1k_tokens', sa.Float(), nullable=True, comment='Input cost per 1000 tokens (if split)'),
    sa.Column('output_cost_per_1k_tokens', sa.Float(), nullable=True, comment='Output cost per 1000 tokens'),
    sa.Column('api_call_name', sa.String(length=255), nullable=True, comment='API call endpoint name'),
    sa.Column('latency_ms_estimate', sa.Integer(), nullable=True, comment='Estimated latency in milliseconds'),
    sa.Column('rate_limit_per_minute', sa.Integer(), nullable=True, comment='Rate limit per minute'),
    sa.Column('fine_tuning_available', sa.Boolean(), nullable=True, comment='1 if finetune is supported'),
    sa.Column('multi_lang_support', sa.Boolean(), nullable=True, comment='1 if multi-language supported'),
    sa.Column('release_date', sa.DateTime(timezone=True), nullable=True, comment='Model release date'),
    sa.Column('developer_name', sa.String(length=255), nullable=True, comment='Developer/organization name'),
    sa.Column('developer_website', sa.String(length=255), nullable=True, comment='Developer website URL'),
    sa.Column('training_data_sources', sa.String(length=1000), nullable=True, comment='Training data source info'),
    sa.Column('parameters_count', sa.String(length=50), nullable=True, comment='Parameter count description'),
    sa.Column('model_architecture', sa.String(length=255), nullable=True, comment='Model architecture description'),
    sa.Column('documentation_url', sa.String(length=255), nullable=True, comment='Documentation URL'),
    sa.Column('demo_url', sa.String(length=255), nullable=True, comment='Demo URL'),
    sa.Column('tags', sa.JSON(), nullable=True, comment='Array of strings for tags'),
    sa.Column('last_updated', sa.DateTime(timezone=True), nullable=True, comment='Last updated timestamp'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='Last update timestamp'),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True, comment='Soft delete timestamp (NULL if active)'),
    sa.ForeignKeyConstraint(['provider_id'], ['model_providers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_model_provider_models_id'), 'model_provider_models', ['id'], unique=False)
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_organizations_id'), 'organizations', ['id'], unique=False)
    op.create_table('security_audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('api_key_id', sa.String(length=255), nullable=True),
    sa.Column('client_ip', sa.String(length=45), nullable=True),
    sa.Column('event_data', sa.JSON(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_security_audit_logs_id'), 'security_audit_logs', ['id'], unique=False)
    op.create_index(op.f('ix_security_audit_logs_timestamp'), 'security_audit_logs', ['timestamp'], unique=False)
    op.create_table('tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=True),
    sa.Column('token_type', sa.String(length=50), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tokens_id'), 'tokens', ['id'], unique=False)
    op.create_index(op.f('ix_tokens_token'), 'tokens', ['token'], unique=True)
    op.create_table('category_model_association',
    sa.Column('category_id', sa.BigInteger(), nullable=True),
    sa.Column('model_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['model_categories.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['model_provider_models.id'], )
    )
    op.create_table('chat_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=False, comment='conversation role'),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_chat_messages_id'), 'chat_messages', ['id'], unique=False)
    op.create_table('knowledge_bases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('visibility', sa.Enum('PRIVATE', 'PUBLIC', 'ORGANIZATION', name='visibility'), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('collection_name', sa.String(length=255), nullable=False),
    sa.Column('model', sa.String(length=255), nullable=False),
    sa.Column('dimension', sa.Integer(), nullable=False),
    sa.Column('document_count', sa.Integer(), nullable=True),
    sa.Column('total_chunks', sa.Integer(), nullable=True),
    sa.Column('total_tokens', sa.Integer(), nullable=True),
    sa.Column('meta_info', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('collection_name'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_knowledge_bases_id'), 'knowledge_bases', ['id'], unique=False)
    op.create_table('llm_config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('config_key', sa.String(length=255), nullable=False),
    sa.Column('llm_model_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['llm_model_id'], ['llm_model.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_llm_config_config_key'), 'llm_config', ['config_key'], unique=True)
    op.create_index(op.f('ix_llm_config_id'), 'llm_config', ['id'], unique=False)
    op.create_table('model_model_categories',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('model_id', sa.BigInteger(), nullable=False, comment='Foreign key to model_provider_models.id'),
    sa.Column('category_id', sa.BigInteger(), nullable=False, comment='Foreign key to model_categories.id'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Creation timestamp'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Soft delete timestamp'),
    sa.ForeignKeyConstraint(['category_id'], ['model_categories.id'], ),
    sa.ForeignKeyConstraint(['model_id'], ['model_provider_models.id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_model_model_categories_id'), 'model_model_categories', ['id'], unique=False)
    op.create_table('organization_members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_organization_members_id'), 'organization_members', ['id'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'ARCHIVED', 'DELETED', name='projectstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_table('resource_usage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('endpoint', sa.String(length=255), nullable=True),
    sa.Column('model', sa.String(length=100), nullable=True),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['application_id'], ['applications.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_resource_usage_application_id'), 'resource_usage', ['application_id'], unique=False)
    op.create_index(op.f('ix_resource_usage_id'), 'resource_usage', ['id'], unique=False)
    op.create_index(op.f('ix_resource_usage_timestamp'), 'resource_usage', ['timestamp'], unique=False)
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_table('api_keys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(length=36), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'DISABLE', 'DELETED', name='apikeystatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key'),
    mysql_engine='InnoDB'
    )
    op.create_index(op.f('ix_api_keys_id'), 'api_keys', ['id'], unique=False)
    op.create_index(op.f('ix_api_keys_uuid'), 'api_keys', ['uuid'], unique=True)
    op.create_table('knowledge_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('kb_id', sa.Integer(), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=512), nullable=False),
    sa.Column('file_type', sa.String(length=50), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('file_hash', sa.String(length=64), nullable=False),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('chunk_count', sa.Integer(), nullable=True),
    sa.Column('token_count', sa.Integer(), nullable=True),
    sa.Column('vector_count', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('author', sa.String(length=255), nullable=True),
    sa.Column('source_url', sa.String(length=512), nullable=True),
    sa.Column('meta_info', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('chunk_size', sa.Integer(), nullable=True),
    sa.Column('chunk_overlap', sa.Integer(), nullable=True),
    sa.Column('embedding_model', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['kb_id'], ['knowledge_bases.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_file_hash', 'knowledge_documents', ['file_hash'], unique=False)
    op.create_index('idx_kb_status', 'knowledge_documents', ['kb_id', 'status'], unique=False)
    op.create_index(op.f('ix_knowledge_documents_id'), 'knowledge_documents', ['id'], unique=False)
    op.create_table('organization_member_roles',
    sa.Column('organization_member_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['organization_member_id'], ['organization_members.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('organization_member_id', 'role_id')
    )
    op.create_table('knowledge_document_chunks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('token_count', sa.Integer(), nullable=True),
    sa.Column('vector_id', sa.String(length=255), nullable=True),
    sa.Column('embedding_model', sa.String(length=255), nullable=True),
    sa.Column('chunk_meta_info', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['knowledge_documents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_document_chunk', 'knowledge_document_chunks', ['document_id', 'chunk_index'], unique=False)
    op.create_index(op.f('ix_knowledge_document_chunks_id'), 'knowledge_document_chunks', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_knowledge_document_chunks_id'), table_name='knowledge_document_chunks')
    op.drop_index('idx_document_chunk', table_name='knowledge_document_chunks')
    op.drop_table('knowledge_document_chunks')
    op.drop_table('organization_member_roles')
    op.drop_index(op.f('ix_knowledge_documents_id'), table_name='knowledge_documents')
    op.drop_index('idx_kb_status', table_name='knowledge_documents')
    op.drop_index('idx_file_hash', table_name='knowledge_documents')
    op.drop_table('knowledge_documents')
    op.drop_index(op.f('ix_api_keys_uuid'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_id'), table_name='api_keys')
    op.drop_table('api_keys')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_resource_usage_timestamp'), table_name='resource_usage')
    op.drop_index(op.f('ix_resource_usage_id'), table_name='resource_usage')
    op.drop_index(op.f('ix_resource_usage_application_id'), table_name='resource_usage')
    op.drop_table('resource_usage')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_organization_members_id'), table_name='organization_members')
    op.drop_table('organization_members')
    op.drop_index(op.f('ix_model_model_categories_id'), table_name='model_model_categories')
    op.drop_table('model_model_categories')
    op.drop_index(op.f('ix_llm_config_id'), table_name='llm_config')
    op.drop_index(op.f('ix_llm_config_config_key'), table_name='llm_config')
    op.drop_table('llm_config')
    op.drop_index(op.f('ix_knowledge_bases_id'), table_name='knowledge_bases')
    op.drop_table('knowledge_bases')
    op.drop_index(op.f('ix_chat_messages_id'), table_name='chat_messages')
    op.drop_table('chat_messages')
    op.drop_table('category_model_association')
    op.drop_index(op.f('ix_tokens_token'), table_name='tokens')
    op.drop_index(op.f('ix_tokens_id'), table_name='tokens')
    op.drop_table('tokens')
    op.drop_index(op.f('ix_security_audit_logs_timestamp'), table_name='security_audit_logs')
    op.drop_index(op.f('ix_security_audit_logs_id'), table_name='security_audit_logs')
    op.drop_table('security_audit_logs')
    op.drop_index(op.f('ix_organizations_id'), table_name='organizations')
    op.drop_table('organizations')
    op.drop_index(op.f('ix_model_provider_models_id'), table_name='model_provider_models')
    op.drop_table('model_provider_models')
    op.drop_index(op.f('ix_llm_model_name'), table_name='llm_model')
    op.drop_index(op.f('ix_llm_model_id'), table_name='llm_model')
    op.drop_table('llm_model')
    op.drop_index(op.f('ix_conversations_id'), table_name='conversations')
    op.drop_table('conversations')
    op.drop_index(op.f('ix_chat_files_id'), table_name='chat_files')
    op.drop_table('chat_files')
    op.drop_index(op.f('ix_applications_id'), table_name='applications')
    op.drop_table('applications')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_user_quotas_id'), table_name='user_quotas')
    op.drop_index(op.f('ix_user_quotas_api_key'), table_name='user_quotas')
    op.drop_table('user_quotas')
    op.drop_index(op.f('ix_usage_logs_id'), table_name='usage_logs')
    op.drop_index(op.f('ix_usage_logs_api_key'), table_name='usage_logs')
    op.drop_table('usage_logs')
    op.drop_index(op.f('ix_model_providers_id'), table_name='model_providers')
    op.drop_table('model_providers')
    op.drop_index(op.f('ix_model_categories_id'), table_name='model_categories')
    op.drop_table('model_categories')
    op.drop_index(op.f('ix_llm_provider_provider'), table_name='llm_provider')
    op.drop_index(op.f('ix_llm_provider_name'), table_name='llm_provider')
    op.drop_index(op.f('ix_llm_provider_id'), table_name='llm_provider')
    op.drop_table('llm_provider')
    op.drop_index(op.f('ix_chat_sessions_id'), table_name='chat_sessions')
    op.drop_table('chat_sessions')
    op.drop_index(op.f('ix_api_key_mappings_id'), table_name='api_key_mappings')
    op.drop_index(op.f('ix_api_key_mappings_api_key'), table_name='api_key_mappings')
    op.drop_table('api_key_mappings')
    # ### end Alembic commands ###
